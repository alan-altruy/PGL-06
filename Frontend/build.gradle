plugins {
    id 'application'
    id 'java'
    id 'org.openjfx.javafxplugin' version '0.0.10'
}

//group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    //mavenLocal()
}

javafx {
    version = "11"
    modules = [ 'javafx.controls', 'javafx.fxml']
}

//sourceSets.main.java.srcDirs = ['be.ac.umons.g06']
mainClassName = project.findProperty("app").toString()

dependencies {
    implementation 'com.konghq:unirest-java:3.13.6'
    implementation 'com.konghq:unirest-objectmapper-jackson:3.11.09'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'org.mockito:mockito-inline:4.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation "org.testfx:testfx-junit5:4.0.16-alpha"
}

jar {
    // Keep jar clean:
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
    manifest {
        attributes 'Main-Class': 'be.ac.umons.g06.Main',
                'Class-Path': configurations.runtimeClasspath.files.collect { "lib/$it.name" }.join(' ')
    }
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

//dependencies {
////    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
////    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
//}

test {
    useJUnitPlatform()
}